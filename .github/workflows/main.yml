name: Kittygram CI/CD

on:
  push:
    branches: main
  pull_request:
    branches: [main]

env:
  DOCKERHUBUSERNAME: mishgan325
  BACKENDIMAGE: mishgan325/kittygram_final-backend
  FRONTENDIMAGE: mishgan325/kittygram_final-frontend
  GATEWAYIMAGE: mishgan325/kittygram_final-gateway

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install OS dependencies for Pillow
        run: sudo apt-get update && sudo apt-get install -y libjpeg-dev zlib1g-dev
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install ruff
        run: pip install ruff
      - name: Run ruff lint
        run: ruff check .

  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: kittygram
          POSTGRES_USER: kittygram_user
          POSTGRES_PASSWORD: kittygram_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      POSTGRES_DB: kittygram
      POSTGRES_USER: kittygram_user
      POSTGRES_PASSWORD: kittygram_password

    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - name: Install OS dependencies for Pillow
        run: sudo apt-get update && sudo apt-get install -y libjpeg-dev zlib1g-dev
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: python manage.py test



  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run frontend tests
        run: npm run test

  build-and-push:
    runs-on: ubuntu-latest
    needs:
      - lint-backend
      - test-backend
      - test-frontend

    steps:
      - uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUBNAME }}
          password: ${{ secrets.DOCKERHUBTOKEN }}

      - name: Build all images
        run: docker compose build

      - name: Push backend image
        run: docker push ${{ env.BACKENDIMAGE }}

      - name: Push frontend image
        run: docker push ${{ env.FRONTENDIMAGE }}

      - name: Push gateway image
        run: docker push ${{ env.GATEWAYIMAGE }}

  notify-telegram:
    if: ${{ success() }}
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAMCHATID }}
          token: ${{ secrets.TELEGRAMBOTTOKEN }}
          message: |
            Kittygram CI/CD завершён успешно!  
            Бэкенд: ${{ env.BACKENDIMAGE }}  
            Фронтенд: ${{ env.FRONTENDIMAGE }}  
            Гейтвей: ${{ env.GATEWAYIMAGE }}